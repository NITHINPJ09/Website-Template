pipeline {
    agent any
    stages {
        stage('---SonarQube Analysis---') { 
            environment {
                SCANNER_HOME = tool 'scannerHome'
                ORGANIZATION = 'test-project-for-devops'
                PROJECT_NAME = 'Personal-Website'
                PROJECT_KEY = 'Personal-Website-009'
            }
            steps {
                withSonarQubeEnv('SQ1') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.organization=$ORGANIZATION \
                      -Dsonar.projectName=$PROJECT_NAME \
                      -Dsonar.projectKey=$PROJECT_KEY \
                      -Dsonar.projectBaseDir=.'''
                }
            }
        }
        stage('---Quality Gate---') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('---Deployment---') { 
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'Server-Credentials', keyFileVariable: 'KEY', usernameVariable: 'USERNAME')]) {
                    sh 'scp -i $KEY -o StrictHostKeyChecking=accept-new -r * $USERNAME@20.127.31.172:/var/www/html'
                }
            }
        }  
        stage('---DAST---') { 
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'DAST_Server', keyFileVariable: 'KEY', usernameVariable: 'USERNAME')]) {
                    sh '''ssh -i $KEY -o StrictHostKeyChecking=accept-new -T $USERNAME@172.171.198.19 <<EOF
                    sudo docker run -t owasp/zap2docker-stable zap-baseline.py -t http://20.127.31.172/ || true
                    exit
                    EOF'''
                }
            }
        }       
    }
}
